// stylelint-disable declaration-no-important

//
// Text
//

.text-monospace { font-family: $font-family-monospace !important; }

// Alignment

.text-justify  { text-align: justify !important; }
.text-wrap     { white-space: normal !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate(); }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Size

@each $size, $value in $font-sizes {
  .font-size-#{$size} {
    font-size: $value !important;
  }
}

// Responsive size

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $size, $value in $font-sizes {
      .font-size#{$infix}-#{$size} {
        font-size: $value !important;
      }
    }
  }
}

.font-size-h1 { @include font-size($h1-font-size, true); }
.font-size-h2 { @include font-size($h2-font-size, true); }
.font-size-h3 { @include font-size($h3-font-size, true); }
.font-size-h4 { @include font-size($h4-font-size, true); }
.font-size-h5 { @include font-size($h5-font-size, true); }
.font-size-h6 { @include font-size($h6-font-size, true); }

@include media-breakpoint-up(lg) {
  .font-size-h1 { @include font-size($h1-font-size-desktop, true); }
  .font-size-h2 { @include font-size($h2-font-size-desktop, true); }
  .font-size-h3 { @include font-size($h3-font-size-desktop, true); }
  .font-size-h4 { @include font-size($h4-font-size-desktop, true); }
  .font-size-h5 { @include font-size($h5-font-size-desktop, true); }
  .font-size-h6 { @include font-size($h6-font-size-desktop, true); }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Weight and italics

.font-weight-light    { font-weight: $font-weight-light !important; }
.font-weight-lighter  { font-weight: $font-weight-lighter !important; }
.font-weight-normal   { font-weight: $font-weight-normal !important; }
.font-weight-semibold { font-weight: $font-weight-semibold !important; }
.font-weight-bold     { font-weight: $font-weight-bold !important; }
.font-weight-bolder   { font-weight: $font-weight-bolder !important; }
.font-weight-boldest   { font-weight: $font-weight-boldest !important; }
.font-italic          { font-style: italic !important; }

// Line height
.line-height-base { line-height: $line-height-base !important; }

// Contextual colors

.text-white { color: $white !important; }

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value, true);
}

.text-body { color: $body-color !important; }
.text-muted { color: $text-muted !important; }

.text-black-50 { color: rgba($black, .5) !important; }
.text-white-50 { color: rgba($white, .5) !important; }

// Misc

.text-hide {
  @include text-hide($ignore-warning: true);
}

.text-decoration-none { text-decoration: none !important; }

.text-break {
  word-break: break-word !important; // Deprecated, but avoids issues with flex containers
  word-wrap: break-word !important; // Used instead of `overflow-wrap` for IE & Edge Legacy
}

// Reset

.text-reset { color: inherit !important; }

@mixin text-colors($color, $value, $relative: true) {
  .text-#{$color} {
    color: $value;
  }
}

// theme-colors are in _text-variants.scss
// Add color text classes
@each $color, $value in $colors {
  @include text-colors($color, $value);
}

// Add gray text colors classes
@each $color, $value in $grays {
  @include text-colors($color, $value);
}

// Add teal text colors classes
@each $color, $value in $teals {
  @include text-colors($color, $value);
}

// Add cyan text colors classes
@each $color, $value in $cyans {
  @include text-colors($color, $value);
}

// Add pink text colors classes
@each $color, $value in $pinks {
  @include text-colors($color, $value);
}

// Add yellow text colors classes
@each $color, $value in $yellows {
  @include text-colors($color, $value);
}

// Add orange text colors classes
@each $color, $value in $oranges {
  @include text-colors($color, $value);
}
