@use "sass:color";
@use "functions";
@use "mixins/border-radius";
@use "mixins/box-shadow";
@use "mixins/reset-text";
@use "variables";
@use "vendor/rfs";

.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: variables.$zindex-popover;
  display: block;
  max-width: variables.$popover-max-width;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text.reset-text();
  @include rfs.font-size(variables.$popover-font-size);
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-clip: padding-box;

  @include border-radius.border-radius(variables.$popover-border-radius);
  box-shadow: variables.$popover-box-shadow;
  padding: variables.$popover-header-padding-y variables.$popover-header-padding-x;

  .es-popover-close {
    border: none;
  }

  &.es-popover-light {
    background-color: variables.$white;
    border: variables.$popover-border-width solid variables.$white;

    .popover-header {
      background-color: variables.$white;
    }

    .popover-header, .popover-body, .es-popover-close {
      color: variables.$gray-900;
    }
  }

  &.es-popover-dark {
    background-color: variables.$popover-bg;
    border: variables.$popover-border-width solid variables.$popover-border-color;

    .es-popover-close, a {
      color: variables.$white;
    }
  }

  .arrow {
    position: absolute;
    display: block;
    width: variables.$popover-arrow-width;
    height: variables.$popover-arrow-height;
    margin: 0 variables.$popover-border-radius;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }

  &[data-p-overlaypanel-flipped="true"] {
    margin-bottom: variables.$popover-arrow-height;
    transform: translate(-(calc(variables.$popover-arrow-width / 2)), -1rem);

    .arrow {
      bottom: -(variables.$popover-arrow-height) - variables.$popover-border-width + 0.1rem;
      left: 0;
      clip-path: polygon(0% 0%, 50% 100%, 100% 0%);

      &::after {
        bottom: variables.$popover-border-width;
        border-width: variables.$popover-arrow-height (variables.$popover-arrow-width * .5) 0;
      }
    }

    &.es-popover-dark .arrow::after {
      border-top-color: variables.$popover-arrow-color;
    }

    &.es-popover-light .arrow::after {
      border-top-color: variables.$white;
    }
  }

  &:not([data-p-overlaypanel-flipped="true"]) {
    margin-top: variables.$popover-arrow-height;
    transform: translate(-(calc(variables.$popover-arrow-width / 2)), 0);

    .arrow {
      top: -(variables.$popover-arrow-height) - variables.$popover-border-width + 0.1rem;
      left: 0;
      clip-path: polygon(0% 100%, 50% 0%, 100% 100%);

      &::after {
        top: variables.$popover-border-width;
        border-width: 0 (variables.$popover-arrow-width * .5) variables.$popover-arrow-height (variables.$popover-arrow-width * .5);
      }
    }

    &.es-popover-dark .arrow::after {
      border-bottom-color: variables.$popover-arrow-color;
    }

    &.es-popover-light .arrow::after {
      border-bottom-color: variables.$white;
    }

    // This will remove the popover-header's border just below the arrow
    .popover-header::before {
      position: absolute;
      top: 0;
      left: 50%;
      display: block;
      width: variables.$popover-arrow-width;
      margin-left: -(variables.$popover-arrow-width) * .5;
      content: "";
      border-bottom: variables.$popover-border-width solid variables.$popover-header-bg;
    }
  }
}


// Offset the popover to account for the popover arrow
.popover-header {
  margin-bottom: .25rem;
  @include rfs.font-size(variables.$font-size-base);
  color: variables.$popover-header-color;
  background-color: variables.$popover-header-bg;
  font-weight: variables.$popover-header-font-weight;
  border-bottom: variables.$popover-border-width solid darken(variables.$popover-header-bg, 5%);
  @include border-radius.border-top-radius(variables.$popover-inner-border-radius);

  &:empty {
    display: none;
  }
}

.popover-header + .popover-body {
  padding-right: 28px; // 8px + 20px (X icon size)
}

.popover-body {
  color: variables.$popover-body-color;
}

.es-popover-enter-active,
.es-popover-leave-active {
    transition: opacity 0.15s ease;
}

.es-popover-enter-from,
.es-popover-leave-to {
    opacity: 0;
}
