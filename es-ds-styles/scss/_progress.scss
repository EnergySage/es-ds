@use "mixins/border-radius";
@use "mixins/box-shadow";
@use "mixins/gradients";
@use "mixins/transition";
@use "variables";
@use "vendor/rfs";

// Disable animation if transitions are disabled
@if variables.$enable-transitions {
  @keyframes progress-bar-stripes {
    from { background-position: variables.$progress-height 0; }
    to { background-position: 0 0; }
  }
}

.progress {
  display: flex;
  height: variables.$progress-height;
  overflow: hidden; // force rounded corners by cropping it
  line-height: 0;
  @include rfs.font-size(variables.$progress-font-size);
  background-color: variables.$progress-bg;
  @include border-radius.border-radius(variables.$progress-border-radius);
  @include box-shadow.box-shadow(variables.$progress-box-shadow);
}

.progress-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: hidden;
  color: variables.$progress-bar-color;
  text-align: center;
  white-space: nowrap;
  background-color: variables.$progress-bar-bg;
  background: linear-gradient(90deg, variables.$orange-300 20%, variables.$orange-800 100%);
  @include transition.transition(variables.$progress-bar-transition);
}

.progress-bar--with-circle {
  &::after {
    background: variables.$white;
    border: 0.5px solid variables.$warm-orange;
    border-radius: 50%;
    box-shadow: (0 0 1px 1px variables.$warm-orange inset, 0 0 4px 0 variables.$warm-orange);
    content: '';
    height: 6px;
    overflow: visible;
    position: absolute;
    right: -3px;
    width: 6px;
  }
}

.progress-bar-striped {
  @include gradients.gradient-striped();
  background-size: variables.$progress-height variables.$progress-height;
}

@if variables.$enable-transitions {
  .progress-bar-animated {
    animation: variables.$progress-bar-animation-timing progress-bar-stripes;

    @if variables.$enable-prefers-reduced-motion-media-query {
      @media (prefers-reduced-motion: reduce) {
        animation: none;
      }
    }
  }
}
