@use "functions";
@use "mixins/border-radius";
@use "mixins/box-shadow";
@use "mixins/breakpoints";
@use "mixins/transition";
@use "variables";

// Shell div to position the modal with bottom padding
.modal-dialog {
  position: relative;
  width: auto;
  margin: variables.$modal-dialog-margin;
  // allow clicks to pass through for custom click handling to close modal
  pointer-events: none;
}

.modal-dialog-scrollable {
  display: flex; // IE10/11
  max-height: functions.subtract(100%, variables.$modal-dialog-margin * 2);

  .modal-content {
    max-height: functions.subtract(100vh, variables.$modal-dialog-margin * 2); // IE10/11
    overflow: hidden;
  }

  .modal-header,
  .modal-footer {
    flex-shrink: 0;
  }

  .modal-body {
    overflow-y: auto;
  }
}

// Actual modal
.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
  // counteract the pointer-events: none; in the .modal-dialog
  color: variables.$modal-content-color;
  pointer-events: auto;
  background-color: variables.$modal-content-bg;
  background-clip: padding-box;
  border: variables.$modal-content-border-width solid variables.$modal-content-border-color;
  @include border-radius.border-radius(variables.$modal-content-border-radius);
  // Remove focus outline from opened modal
  outline: 0;
  padding: variables.$modal-padding-mobile;

  @include breakpoints.media-breakpoint-up(lg) {
    padding: variables.$modal-padding-desktop;
  }
}

// Modal background
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: variables.$zindex-modal-backdrop;
  width: 100vw;
  height: 100vh;
  background-color: variables.$modal-backdrop-bg;

  // Fade for backdrop
  &.fade { opacity: 0; }
  &.show { opacity: variables.$modal-backdrop-opacity; }
}

// Modal header
// Top section of the modal w/ title and dismiss
.modal-header {
  display: flex;
  align-items: flex-start; // so the close btn always stays on the upper right corner
  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
  border-bottom: variables.$modal-header-border-width solid variables.$modal-header-border-color;
  @include border-radius.border-top-radius(variables.$modal-content-inner-border-radius);
  margin-bottom: variables.$modal-header-body-spacing;

  .close {
    padding: variables.$modal-header-padding;
    // auto on the left force icon to the right even when there is no .modal-title
    margin: (-(variables.$modal-header-padding-y)) (-(variables.$modal-header-padding-x)) (-(variables.$modal-header-padding-y)) auto;
  }
}

// Title text within header
.modal-title {
  margin-bottom: 0;
  line-height: variables.$modal-title-line-height;
}

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
.modal-body {
  position: relative;
  // Enable `flex-grow: 1` so that the body take up as much space as possible
  // when there should be a fixed height on `.modal-dialog`.
  flex: 1 1 auto;
}

// Footer (for actions)
.modal-footer {
  display: flex;
  flex-wrap: wrap;
  align-items: center; // vertically center
  justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
  padding-top: 1rem;
  position: relative;
  @include border-radius.border-bottom-radius(variables.$modal-content-inner-border-radius);

  &.footer-separator {
    padding-top: variables.$modal-footer-padding-top;

    &::before {
      border-top: variables.$modal-footer-border-width solid variables.$modal-footer-border-color;
      content: '';
      left: 0;
      position: absolute;
      right: 0;
      top: variables.$modal-footer-padding-bottom;
    }
  }

  // Place margin between footer elements
  // This solution is far from ideal because of the universal selector usage,
  // but is needed to fix https://github.com/twbs/bootstrap/issues/24800
  > * {
    margin: variables.$modal-footer-margin-between * .5;
  }
}

// Measure scrollbar width for padding body during modal show/hide
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

// Scale up the modal
@include breakpoints.media-breakpoint-up(sm) {
  // Automatically set modal's width for larger viewports
  .modal-dialog {
    max-width: variables.$modal-md;
    margin: variables.$modal-dialog-margin-y-sm-up auto;
  }

  .modal-dialog-scrollable {
    max-height: functions.subtract(100%, variables.$modal-dialog-margin-y-sm-up * 2);

    .modal-content {
      max-height: functions.subtract(100vh, variables.$modal-dialog-margin-y-sm-up * 2);
    }
  }

  .modal-dialog-centered {
    min-height: functions.subtract(100%, variables.$modal-dialog-margin-y-sm-up * 2);

    &::before {
      height: functions.subtract(100vh, variables.$modal-dialog-margin-y-sm-up * 2);
      height: min-content;
    }
  }

  .modal-sm {
    max-width: variables.$modal-sm;
  }
}

@include breakpoints.media-breakpoint-up(md) {
  .modal-md {
    max-width: variables.$modal-md;
  }
}

@include breakpoints.media-breakpoint-up(lg) {
  .modal-lg,
  .modal-xl {
    max-width: variables.$modal-lg;
  }
}

@include breakpoints.media-breakpoint-up(xl) {
  .modal-xl { max-width: variables.$modal-xl; }
}
